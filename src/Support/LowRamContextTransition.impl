#include "ContextTransition.h"
#include "Context.h"
#include "../Loop/LoopManager.h"
#include "../UI/Screen.h"

ContextTransition::ContextTransition(Display& display, Context* contextA, Context* contextB) :
		ContextTransition(display, contextA, contextB, false){

}

ContextTransition::ContextTransition(Display& display, Context* contextA, Context* contextB, bool reverse)
	: reverse(reverse), display(&display), contextA(contextA), contextB(contextB) {

	contextA->stop();
	contextA->pack();

	contextB->unpack();
    contextB->draw();

	LoopManager::addListener(this);
}

ContextTransition::~ContextTransition(){
	LoopManager::removeListener(this);
}

void ContextTransition::loop(uint micros){
	time += micros;

	uint scroll = time / (1.5 * 1000.0);
	if(lastScroll < scroll){
		if(reverse){
            display->getBaseSprite()->setPos(0, min(0, (int) scroll - (int) display->getHeight()));
		}else{
            display->getBaseSprite()->setPos(0, max(0, (int) display->getHeight() - (int) scroll));
		}
		display->commit();

		lastScroll = scroll;
	}

	if(scroll >= display->getHeight()){
		Serial.println("Ending context switch");
        if(!reverse){
            display->getBaseSprite()->setPos(0,0);
        }
        display->commit();
		contextB->start();
        if(reverse)
        {
            display->getBaseSprite()->setPos(0,0);
        }
		delete this;
	}
}